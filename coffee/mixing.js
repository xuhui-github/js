// Generated by CoffeeScript 2.7.0
(function() {
  var Parrot, extend, include, method, name, p;

  extend = function(obj, mixin) {
    var method, name;
    for (name in mixin) {
      method = mixin[name];
      obj[name] = method;
    }
    return obj;
  };

  include = function(kclass, mixin) {
    return extend(kclass.prototype, mixin);
  };

  Parrot = class Parrot {
    constructor(name1) {
      this.name = name1;
    }

    getname() {
      return this.name;
    }

    setage(age) {
      this.age = age;
    }

  };

  include(Parrot, {
    isDeceased: true
  });

  (new Parrot()).isDeceased;

  console.log((new Parrot('Macow')).name);

  console.log((new Parrot('Maaa')).isDeceased);

  for (name in Parrot) {
    method = Parrot[name];
    console.log(name, method);
  }

  console.log((new Parrot('Mssss')).getname());

  p = new Parrot('Mooo');

  p.setage(10);

  console.log(p.name, p.age);

  for (name in Parrot) {
    method = Parrot[name];
    console.log(name, method);
  }

}).call(this);
